# The MIT License (MIT).
# 
# Copyright (c) 2018-2024 Almaz Ilaletdinov <a.ilaletdinov@yandex.ru>
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
# OR OTHER DEALINGS IN THE SOFTWARE.

[tool.poetry]
name = "quranbot-aiogram"
version = "3.4.12"
description = ""
authors = ["Almaz Ilaletdinov <a.ilaletdinov@yandex.ru>"]

[tool.poetry.dependencies]
python = ">=3.12,<3.13"
loguru = "0.7.2"
quranbot-schema-registry = "0.0.20"
sentry-sdk = "1.40.0"
httpx = "0.26.0"
pytz = "2023.4"
databases = {extras = ["asyncpg"], version = "0.8.0"}
attrs = "23.2.0"
jsonpath-ng = "1.6.1"
eo-styleguide = "0.0.1-a12"
redis = "5.0.1"
furl = "2.1.3"
eljson = "0.0.1a1"
aioamqp = "0.15.0"
python-dateutil = "2.8.2"

[tool.poetry.group.dev.dependencies]
wemake-python-styleguide = { git = "https://github.com/wemake-services/wemake-python-styleguide", branch="master" }
deltaver = "0.1.1"
ipython = "8.20.0"
mypy = "1.8.0"
asyncpg-stubs = "0.29.1"
pytest-cov = "4.1.0"
pytest = "7.4.4"
pytest-asyncio = "0.23.4"
pytest-mock = "3.12.0"
pytest-lazy-fixture = "0.6.3"
types-pytz = "2023.4.0.20240130"
types-redis = "4.6.0.20240106"
types-pytest-lazy-fixture = "0.6.3.4"
flake8-copyright = "0.2.4"
pytest-randomly = "3.15.0"
telethon = "1.33.1"
yoyo-migrations = "8.2.0"
sqlfluff = "2.3.5"
respx = "0.20.2"
psycopg2-binary = "2.9.9"
time-machine = "2.13.0"
pika = "1.3.2"
ruff = "0.1.15"
fakeredis = "2.20.1"
jinja2 = "3.1.3"
refurb = "1.28.0"
types-python-dateutil = "2.8.19.20240106"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
skip-string-normalization = true

[tool.pytest.ini_options]
filterwarnings = [
  "error::DeprecationWarning",
]
asyncio_mode = "auto"
addopts = [
  "--doctest-modules",
]

[tool.isort]
line_length = 120
multi_line_output = 3
include_trailing_comma = true

[tool.sqlfluff.core]
max_line_length = 120

[tool.ruff]
select = ["ALL"]
fixable = [
  "F401",   # Unused import
]
target-version = "py311"  # TODO: up to 3.12
ignore = [
  "DTZ005",  # TODO
  "DTZ007",  # TODO
  "INP001",  # TODO
  # ----------------------------------
  "ANN101",  # Missing type annotation for `self` in method
  "ANN102",  # Missing type annotation for `cls` in classmethod
  "ARG001",  # Unused function argument
  "ARG002",  # Unused method argument
  "D203",    # no-blank-line-before-class
  "D213",    # multi-line-summary-first-line
  "D418",    # Function decorated with `@overload` shouldn't contain a docstring
  "FBT001",  # Boolean-typed positional argument in function definition
  "FBT002",  # Boolean-typed positional argument in function definition
  "FIX002",  # Line contains TODO, consider resolving the issue
  "FLY002",  # We not use f-strings
  "I001",    # Conflict with isort
  "RUF100",  # WPS primary linter
  "RUF001",  # Project contain cyrillic symbols
  "RUF002",  # Project contain cyrillic symbols
  "RET505",  # Unnecessary `elif` after `return` statement
  "RET506",  # Unnecessary `elif` after `raise` statement
  "UP030",   # We use explicit references
  "UP032",   # We not use f-strings
  "UP004",   # Class `PrayerReaction` inherits from `object`
  "TD",      # "todo" formats
  "PLR630",  # We not respect staticmethods
]
line-length = 120
preview = true

[tool.ruff.lint]
preview = true

[tool.ruff.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"
multiline-quotes = "double"

[tool.ruff.lint.pylint]
max-args = 6

[tool.ruff.per-file-ignores]
"src/integrations/tg/tg_answers/__init__.py" = ["F401"]
"src/tests/*" = [
  "S101",    # use of `assert` detected
  "D",       # Docstrings
  "ANN",     # Annotations
  "PLR2004", # Magic value
  "PLR0913", # Too many arguments to function call
]

[tool.refurb]
ignore = [184]

[tool.deltaver]
fail_on_avg = 50
fail_on_max = 180
excluded = ["sqlalchemy"]
